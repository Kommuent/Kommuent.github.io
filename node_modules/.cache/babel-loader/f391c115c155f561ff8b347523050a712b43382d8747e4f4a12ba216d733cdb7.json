{"ast":null,"code":"var _jsxFileName = \"/home/samuel/kommuent/src/Mirroring.js\",\n  _s = $RefreshSig$();\n// src/Mirroring.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mirroring = () => {\n  _s();\n  const [networks, setNetworks] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [ssid, setSsid] = useState('');\n  const [password, setPassword] = useState('');\n  const fetchWifiNetworks = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/wifi');\n      const networks = await response.json();\n      setNetworks(networks);\n    } catch (error) {\n      console.error('Error fetching Wi-Fi networks:', error);\n    }\n  };\n  const connectToWifi = async (ssid, password) => {\n    try {\n      const response = await fetch('http://localhost:4000/connect_wifi', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ssid,\n          password\n        })\n      });\n      const result = await response.text();\n      alert(result);\n    } catch (error) {\n      console.error('Error connecting to Wi-Fi:', error);\n    }\n  };\n  const fetchDevices = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/devices');\n      const devices = await response.json();\n      setDevices(devices);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    }\n  };\n  const startMirroring = async deviceId => {\n    try {\n      const response = await fetch(`http://localhost:4000/mirror/${deviceId}`);\n      const result = await response.text();\n      alert(result);\n    } catch (error) {\n      console.error('Error starting mirroring:', error);\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wi-Fi Networks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWifiNetworks,\n      children: \"Scan Wi-Fi Networks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: networks.map(network => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: network.ssid\n      }, network.ssid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"ssid\",\n      children: \"SSID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"ssid\",\n      value: ssid,\n      onChange: e => setSsid(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => connectToWifi(ssid, password),\n      children: \"Connect to Wi-Fi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchDevices,\n      children: \"Refresh Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [device.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startMirroring(device.id),\n          children: \"Start Mirroring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Mirroring, \"G0Q7Rnv8XTwXRLOelgcJpRavV2A=\");\n_c = Mirroring;\nexport default Mirroring;\nvar _c;\n$RefreshReg$(_c, \"Mirroring\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Mirroring","_s","networks","setNetworks","devices","setDevices","ssid","setSsid","password","setPassword","fetchWifiNetworks","response","fetch","json","error","console","connectToWifi","method","headers","body","JSON","stringify","result","text","alert","fetchDevices","startMirroring","deviceId","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","network","htmlFor","type","id","value","onChange","e","target","device","name","_c","$RefreshReg$"],"sources":["/home/samuel/kommuent/src/Mirroring.js"],"sourcesContent":["// src/Mirroring.js\nimport React, { useState, useEffect } from 'react';\n\nconst Mirroring = () => {\n  const [networks, setNetworks] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [ssid, setSsid] = useState('');\n  const [password, setPassword] = useState('');\n\n  const fetchWifiNetworks = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/wifi');\n      const networks = await response.json();\n      setNetworks(networks);\n    } catch (error) {\n      console.error('Error fetching Wi-Fi networks:', error);\n    }\n  };\n\n  const connectToWifi = async (ssid, password) => {\n    try {\n      const response = await fetch('http://localhost:4000/connect_wifi', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ssid, password }),\n      });\n      const result = await response.text();\n      alert(result);\n    } catch (error) {\n      console.error('Error connecting to Wi-Fi:', error);\n    }\n  };\n\n  const fetchDevices = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/devices');\n      const devices = await response.json();\n      setDevices(devices);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    }\n  };\n\n  const startMirroring = async (deviceId) => {\n    try {\n      const response = await fetch(`http://localhost:4000/mirror/${deviceId}`);\n      const result = await response.text();\n      alert(result);\n    } catch (error) {\n      console.error('Error starting mirroring:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n\n  return (\n    <div>\n      <h1>Wi-Fi Networks</h1>\n      <button onClick={fetchWifiNetworks}>Scan Wi-Fi Networks</button>\n      <ul>\n        {networks.map((network) => (\n          <li key={network.ssid}>{network.ssid}</li>\n        ))}\n      </ul>\n      <br />\n      <label htmlFor=\"ssid\">SSID:</label>\n      <input type=\"text\" id=\"ssid\" value={ssid} onChange={(e) => setSsid(e.target.value)} />\n      <label htmlFor=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <button onClick={() => connectToWifi(ssid, password)}>Connect to Wi-Fi</button>\n\n      <h1>Devices</h1>\n      <button onClick={fetchDevices}>Refresh Devices</button>\n      <ul>\n        {devices.map((device) => (\n          <li key={device.id}>\n            {device.name}\n            <button onClick={() => startMirroring(device.id)}>Start Mirroring</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Mirroring;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}