{"ast":null,"code":"var _jsxFileName = \"/home/samuel/kommuent/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\nimport QrScanner from 'react-qr-scanner';\nimport net from 'net'; // Import net for TCP/IP\n\nimport './App.css';\nimport wifiIcon from './wifi_PNG62346.png';\nimport playIcon from './play_icon.png';\nimport forwardArrowIcon from './forward_arrow_icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [showSerial, setShowSerial] = useState(false);\n  const [wifiNetworks, setWifiNetworks] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\n  const [qrData, setQrData] = useState('');\n  const [tcpClient, setTcpClient] = useState(null);\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/devices');\n      setDevices(response.data);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    }\n  };\n  const startMirroringUsb = async deviceId => {\n    try {\n      await axios.get(`http://localhost:4000/mirror/usb/${deviceId}`);\n      console.log(`Started mirroring for device: ${deviceId}`);\n\n      // Fetch the QR code for the device\n      const qrCodeResponse = await axios.get(`http://localhost:4000/qr_code/${deviceId}`, {\n        responseType: 'arraybuffer'\n      });\n      const qrCode = Buffer.from(qrCodeResponse.data, 'binary').toString('base64');\n      setQrData(`data:image/png;base64,${qrCode}`);\n    } catch (error) {\n      console.error('Error starting screen mirroring via USB:', error);\n    }\n  };\n  const scanWifi = async deviceId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/wifi/${deviceId}`);\n      setWifiNetworks(response.data);\n      setSelectedDeviceId(deviceId);\n    } catch (error) {\n      console.error('Error scanning WiFi networks:', error);\n    }\n  };\n  const connectWifi = async (ssid, password) => {\n    try {\n      await axios.post('http://localhost:4000/connect_wifi', {\n        ssid,\n        password,\n        deviceId: selectedDeviceId\n      });\n      setWifiNetworks([]);\n      startMirroringWifi(selectedDeviceId); // Start mirroring after connecting to WiFi\n    } catch (error) {\n      console.error('Error connecting to WiFi:', error);\n    }\n  };\n  const startMirroringWifi = async deviceId => {\n    try {\n      await axios.post('http://localhost:4000/connect_wifi', {\n        deviceId\n      });\n    } catch (error) {\n      console.error('Error starting screen mirroring via WiFi:', error);\n    }\n  };\n  const handleScan = async data => {\n    if (data) {\n      setQrData(data);\n      try {\n        // Verify that the scanned QR code is from the Kommuent app\n        const verificationResponse = await axios.post('http://localhost:4000/verify_qr', {\n          qrCode: data\n        });\n        if (verificationResponse.data.verified) {\n          // Extract IP and port from the QR code data\n          const [ip, port] = data.split(':');\n\n          // Create TCP/IP client and connect to server\n          const client = new net.Socket();\n          client.connect(port, ip, () => {\n            console.log('Connected to server via QR code');\n            setTcpClient(client);\n          });\n          client.on('data', data => {\n            console.log('Data received from server:', data.toString());\n            // Handle the screen data here\n          });\n          client.on('close', () => {\n            console.log('Connection closed');\n            setTcpClient(null);\n          });\n          client.on('error', error => {\n            console.error('Connection error:', error);\n            setTcpClient(null);\n          });\n        }\n      } catch (error) {\n        console.error('Error verifying QR code:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Screen Mirroring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-list\",\n        children: devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"device-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: device.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"device-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startMirroringUsb(device.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: playIcon,\n                alt: \"Play\",\n                style: {\n                  width: '20px',\n                  height: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => scanWifi(device.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: wifiIcon,\n                alt: \"WiFi\",\n                style: {\n                  width: '20px',\n                  height: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: forwardArrowIcon,\n                alt: \"Forward\",\n                style: {\n                  width: '20px',\n                  height: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qr-section\",\n            children: qrData && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: qrData,\n              alt: \"QR Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, device.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wifi-networks\",\n        children: wifiNetworks.map(network => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wifi-network\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: network.ssid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => connectWifi(network.ssid, prompt('Enter WiFi password')),\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, network.ssid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-scanner\",\n        children: /*#__PURE__*/_jsxDEV(QrScanner, {\n          delay: 300,\n          onError: err => console.error(err),\n          onScan: handleScan,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vh7M48x3EJBrzgVHAR+BVlLQDRw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","QRCode","QrScanner","net","wifiIcon","playIcon","forwardArrowIcon","jsxDEV","_jsxDEV","App","_s","devices","setDevices","showSerial","setShowSerial","wifiNetworks","setWifiNetworks","selectedDeviceId","setSelectedDeviceId","qrData","setQrData","tcpClient","setTcpClient","fetchDevices","response","get","data","error","console","startMirroringUsb","deviceId","log","qrCodeResponse","responseType","qrCode","Buffer","from","toString","scanWifi","connectWifi","ssid","password","post","startMirroringWifi","handleScan","verificationResponse","verified","ip","port","split","client","Socket","connect","on","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","device","name","onClick","id","src","alt","style","width","height","network","prompt","delay","onError","err","onScan","_c","$RefreshReg$"],"sources":["/home/samuel/kommuent/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\nimport QrScanner from 'react-qr-scanner';\nimport net from 'net'; // Import net for TCP/IP\n\nimport './App.css';\nimport wifiIcon from './wifi_PNG62346.png';\nimport playIcon from './play_icon.png';\nimport forwardArrowIcon from './forward_arrow_icon.png';\n\nfunction App() {\n  const [devices, setDevices] = useState([]);\n  const [showSerial, setShowSerial] = useState(false);\n  const [wifiNetworks, setWifiNetworks] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\n  const [qrData, setQrData] = useState('');\n  const [tcpClient, setTcpClient] = useState(null);\n\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/devices');\n      setDevices(response.data);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    }\n  };\n\n  const startMirroringUsb = async (deviceId) => {\n    try {\n      await axios.get(`http://localhost:4000/mirror/usb/${deviceId}`);\n      console.log(`Started mirroring for device: ${deviceId}`);\n\n      // Fetch the QR code for the device\n      const qrCodeResponse = await axios.get(`http://localhost:4000/qr_code/${deviceId}`, { responseType: 'arraybuffer' });\n      const qrCode = Buffer.from(qrCodeResponse.data, 'binary').toString('base64');\n      setQrData(`data:image/png;base64,${qrCode}`);\n    } catch (error) {\n      console.error('Error starting screen mirroring via USB:', error);\n    }\n  };\n\n  const scanWifi = async (deviceId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/wifi/${deviceId}`);\n      setWifiNetworks(response.data);\n      setSelectedDeviceId(deviceId);\n    } catch (error) {\n      console.error('Error scanning WiFi networks:', error);\n    }\n  };\n\n  const connectWifi = async (ssid, password) => {\n    try {\n      await axios.post('http://localhost:4000/connect_wifi', { ssid, password, deviceId: selectedDeviceId });\n      setWifiNetworks([]);\n      startMirroringWifi(selectedDeviceId); // Start mirroring after connecting to WiFi\n    } catch (error) {\n      console.error('Error connecting to WiFi:', error);\n    }\n  };\n\n  const startMirroringWifi = async (deviceId) => {\n    try {\n      await axios.post('http://localhost:4000/connect_wifi', { deviceId });\n    } catch (error) {\n      console.error('Error starting screen mirroring via WiFi:', error);\n    }\n  };\n\n  const handleScan = async (data) => {\n    if (data) {\n      setQrData(data);\n      try {\n        // Verify that the scanned QR code is from the Kommuent app\n        const verificationResponse = await axios.post('http://localhost:4000/verify_qr', { qrCode: data });\n        if (verificationResponse.data.verified) {\n          // Extract IP and port from the QR code data\n          const [ip, port] = data.split(':');\n          \n          // Create TCP/IP client and connect to server\n          const client = new net.Socket();\n          client.connect(port, ip, () => {\n            console.log('Connected to server via QR code');\n            setTcpClient(client);\n          });\n\n          client.on('data', (data) => {\n            console.log('Data received from server:', data.toString());\n            // Handle the screen data here\n          });\n\n          client.on('close', () => {\n            console.log('Connection closed');\n            setTcpClient(null);\n          });\n\n          client.on('error', (error) => {\n            console.error('Connection error:', error);\n            setTcpClient(null);\n          });\n        }\n      } catch (error) {\n        console.error('Error verifying QR code:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Screen Mirroring</h1>\n        <div className=\"device-list\">\n          {devices.map((device) => (\n            <div key={device.id} className=\"device-item\">\n              <div className=\"device-info\">\n                <p>{device.name}</p>\n              </div>\n              <div className=\"device-actions\">\n                <button onClick={() => startMirroringUsb(device.id)}>\n                  <img src={playIcon} alt=\"Play\" style={{ width: '20px', height: '20px' }} />\n                </button>\n                <button onClick={() => scanWifi(device.id)}>\n                  <img src={wifiIcon} alt=\"WiFi\" style={{ width: '20px', height: '20px' }} />\n                </button>\n                <button>\n                  <img src={forwardArrowIcon} alt=\"Forward\" style={{ width: '20px', height: '20px' }} />\n                </button>\n              </div>\n              <div className=\"qr-section\">\n                {qrData && <img src={qrData} alt=\"QR Code\" />}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"wifi-networks\">\n          {wifiNetworks.map((network) => (\n            <div key={network.ssid} className=\"wifi-network\">\n              <p>{network.ssid}</p>\n              <button onClick={() => connectWifi(network.ssid, prompt('Enter WiFi password'))}>\n                Connect\n              </button>\n            </div>\n          ))}\n        </div>\n        <div className=\"qr-scanner\">\n          <QrScanner\n            delay={300}\n            onError={(err) => console.error(err)}\n            onScan={handleScan}\n            style={{ width: '100%' }}\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}