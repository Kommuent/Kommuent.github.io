{"ast":null,"code":"var _jsxFileName = \"/home/samuel/kommuent/src/Mirroring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [networks, setNetworks] = useState([]);\n  const [selectedNetwork, setSelectedNetwork] = useState('');\n  const [password, setPassword] = useState('');\n  const [deviceId, setDeviceId] = useState('');\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/devices');\n      if (response.data.length > 0) {\n        setDeviceId(response.data[0].id); // Assuming you want to use the first device found\n      }\n    } catch (error) {\n      console.error('Error fetching devices', error);\n    }\n  };\n  const handleScanWifi = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/wifi/${deviceId}`);\n      setNetworks(response.data);\n    } catch (error) {\n      console.error('Error scanning WiFi networks', error);\n    }\n  };\n  const handleConnectAndMirror = async () => {\n    try {\n      await axios.post('http://localhost:4000/connect_wifi', {\n        ssid: selectedNetwork,\n        password,\n        deviceId\n      });\n      // Proceed to mirroring after connecting to WiFi\n    } catch (error) {\n      console.error('Error connecting to WiFi and starting mirroring', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScanWifi,\n      children: \"Scan WiFi Networks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), networks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedNetwork(e.target.value),\n        children: networks.map(network => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: network.ssid,\n          children: network.ssid\n        }, network.ssid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter WiFi Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnectAndMirror,\n        children: \"Connect and Mirror\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9H6iaZT55dY56vFfAIR/N8RevLg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","networks","setNetworks","selectedNetwork","setSelectedNetwork","password","setPassword","deviceId","setDeviceId","fetchDevices","response","get","data","length","id","error","console","handleScanWifi","handleConnectAndMirror","post","ssid","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","network","type","placeholder","_c","$RefreshReg$"],"sources":["/home/samuel/kommuent/src/Mirroring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [networks, setNetworks] = useState([]);\n  const [selectedNetwork, setSelectedNetwork] = useState('');\n  const [password, setPassword] = useState('');\n  const [deviceId, setDeviceId] = useState('');\n\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/devices');\n      if (response.data.length > 0) {\n        setDeviceId(response.data[0].id); // Assuming you want to use the first device found\n      }\n    } catch (error) {\n      console.error('Error fetching devices', error);\n    }\n  };\n\n  const handleScanWifi = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/wifi/${deviceId}`);\n      setNetworks(response.data);\n    } catch (error) {\n      console.error('Error scanning WiFi networks', error);\n    }\n  };\n\n  const handleConnectAndMirror = async () => {\n    try {\n      await axios.post('http://localhost:4000/connect_wifi', { ssid: selectedNetwork, password, deviceId });\n      // Proceed to mirroring after connecting to WiFi\n    } catch (error) {\n      console.error('Error connecting to WiFi and starting mirroring', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleScanWifi}>Scan WiFi Networks</button>\n      {networks.length > 0 && (\n        <div>\n          <select onChange={(e) => setSelectedNetwork(e.target.value)}>\n            {networks.map((network) => (\n              <option key={network.ssid} value={network.ssid}>\n                {network.ssid}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"password\"\n            placeholder=\"Enter WiFi Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button onClick={handleConnectAndMirror}>Connect and Mirror</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}